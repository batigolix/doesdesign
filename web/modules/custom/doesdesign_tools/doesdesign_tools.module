<?php

/**
 * @file
 * Contains doesdesign_tools.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\Core\Link;

/**
 * Implements hook_theme().
 */
function doesdesign_tools_theme() {
  return [
    'social_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
    'doesdesign_tools' => [
      'render element' => 'children',
    ],
    'copyright_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
    'contact_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
    'contact_form_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
  ];
}

/**
 * Sends mail.
 */
function doesdesign_tools_mail($key, &$message, $params) {
  $options = [
    'langcode' => $message['langcode'],
  ];
  switch ($key) {
    case 'doesdesign_tools_mail':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('E-mail van doesdesign.nl: @subject', ['@subject' => $params['subject']], $options);
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function doesdesign_tools_form_contact_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  \Drupal::service('honeypot')->addFormProtection($form, $form_state, [
    'honeypot',
    'time_restriction',
  ]);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function doesdesign_tools_form_search_form_alter(&$form, $form_state, $form_id) {
  unset($form['help_link']);
}

/**
 * Preprocesses node.
 */
function doesdesign_tools_preprocess_node(&$variables) {
  $type = $variables['node']->getType();
  if ($type == "object") {
    $link_options = [
      'fragment' => 'contact-form',
      'attributes' => [
        'class' => [
          'button',
        ],
      ],
    ];
    $url = Url::fromRoute('<current>', [], $link_options);
    $link = Link::fromTextAndUrl(t('Stel een vraag over dit sieraad'), $url)
      ->toString();
    $variables['content']['ask'] = [
      '#markup' => $link,
      '#weight' => 666,
      '#prefix' => '<p id="dam_return">',
      '#suffix' => '</p>',
    ];
    $label = $variables['node']->label();
    $variables['#attached']['library'][] = 'doesdesign_tools/object';
    $variables['#attached']['drupalSettings']['ask'] = "Vraag over sieraad $label";
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for taxonomies.
 *
 * {@inheritdoc}
 */
function HOOK_theme_suggestions_taxonomy_term_alter(&$suggestions, $vars, $hook) {
  if ($vars['elements']['#view_mode'] == 'teaser') {
    $suggestions[] = 'taxonomy_term__teaser'; // note underscores
  }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter() for taxonomies.
 *
 * {@inheritdoc}
 */
function doesdesign_tools_theme_suggestions_taxonomy_term_alter(&$suggestions, $vars, $hook) {

  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $vars['elements']['#taxonomy_term'];
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $vars['elements']['#view_mode'];
  $suggestions[] = 'taxonomy_term__' . $vars['elements']['#view_mode'];
}
